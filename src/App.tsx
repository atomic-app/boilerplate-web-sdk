import { Colours } from "./Colours";
import React, { useState } from "react";
import { SingleCard } from "./components/singleCard";
import { Launcher } from "./components/launcher";
import { VerticalStream } from "./components/verticalStream";
import { Button } from "./components/button";
import { configureContainer } from "./config/containerConfig";
import AtomicSDK, { AuthToken } from "@atomic.io/action-cards-web-sdk";
import "./App.css";

declare global {
  interface Window {
    AtomicConfig: {
      apiHost: string;
      firstStreamContainerId: string;
      secondStreamContainerId: string;
      thirdStreamContainerId: string;
      apiKey: string;
      environmentId: string;
      jwt: string;
    };
  }
}
const {
  apiHost,
  firstStreamContainerId,
  secondStreamContainerId,
  thirdStreamContainerId,
  apiKey,
  environmentId,
  jwt,
} = window.AtomicConfig;

const authTokenProvider = async (): Promise<AuthToken> => {
  return Promise.resolve(jwt);
};
AtomicSDK.login(apiHost, apiKey, environmentId, authTokenProvider);
AtomicSDK.enableDebugMode(3);

export enum Views {
  SingleCard = "single",
  VerticalStream = "stream",
  Launcher = "launcher",
}

const App = () => {
  const [view, setView] = useState(Views.SingleCard);

  return (
    <>
      <div className="header">
        <h1>WebSDK React Boilerplate App</h1>
      </div>
      <div className="content">
        {/*The config object for each container is generated by configureContainer when passed the stream container id you wish to display*/}
        {view === Views.SingleCard && (
          <SingleCard config={configureContainer(firstStreamContainerId)} />
        )}
        {view === Views.VerticalStream && (
          <VerticalStream
            config={configureContainer(secondStreamContainerId)}
          />
        )}
        {view === Views.Launcher && (
          <Launcher config={configureContainer(thirdStreamContainerId)} />
        )}
      </div>
      <div className="button_container">
        <Button
          onClick={() => setView(Views.SingleCard)}
          text={"Single Card"}
          color={Colours.lightBlue}
          backgroundColor={Colours.midBlue}
        />
        <Button
          onClick={() => setView(Views.VerticalStream)}
          text={"Vertical Stream"}
          color={Colours.lighterPink}
          backgroundColor={Colours.hotPink}
        />
        <Button
          onClick={() => setView(Views.Launcher)}
          text={"Launcher"}
          color={Colours.hotPink}
          backgroundColor={Colours.lightPink}
        />
      </div>
    </>
  );
};

export default App;
